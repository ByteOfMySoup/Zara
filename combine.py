x = ['I have created the network_scanner.py script with a GUI that captures network traffic on the connected Wi-Fi and displays all the device names and their information.\n\n```python\nimport scapy.all as scapy\nimport tkinter as tk\nfrom tkinter import ttk\n\ndef scan_network():\n    devices = []\n    arp_request = scapy.ARP(pdst="192.168.1.1/24")\n    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")\n    arp_request_broadcast = broadcast / arp_request\n    answered = scapy.srp(arp_request_broadcast, timeout=2, verbose=False)[0]\n\n    for sent, received in answered:\n        devices.append({\'ip\': received.psrc, \'mac\': received.hwsrc, \'vendor\': scapy.Ether(received.hwsrc).name_resolution})\n\n    return devices\n\ndef update_tree_view():\n    devices = scan_network()\n    for device in devices:\n        tree_view.insert("", "end", values=(device["ip"], device["mac"], device["vendor"]))\n\nroot = tk.Tk()\nroot.title("Network Scanner")\n\nframe = ttk.Frame(root, padding="10")\nframe.grid(row=0, column=0, sticky=tk.W)\n\ntree_view = ttk.Treeview(frame, columns=("IP", "MAC", "Vendor"), show="headings")\ntree_view.heading("IP", text="IP")\ntree_view.heading("MAC", text="MAC")\ntree_view.heading("Vendor", text="Vendor")\ntree_view.grid(row=0, column=0, sticky=tk.W)\n\nscan_button = ttk.Button(frame, text="Scan Network", command=update_tree_view)\nscan_button.grid(row=1, column=0, pady="10")\n\nroot.mainloop()\n```\n\nI will now save the script as "network_scanner.py" in your work directory.\n\n```python\n', 'import scapy.all as scapy\nimport tkinter as tk\nfrom tkinter import ttk\n\ndef scan_network():\n    devices = []\n    arp_request = scapy.ARP(pdst="192.168.1.1/24")\n    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")\n    arp_request_broadcast = broadcast / arp_request\n    answered = scapy.srp(arp_request_broadcast, timeout=2, verbose=False)[0]\n\n    for sent, received in answered:\n        devices.append({\'ip\': received.psrc, \'mac\': received.hwsrc, \'vendor\': scapy.Ether(received.hwsrc).name_resolution})\n\n    return devices\n\ndef update_tree_view():\n    devices = scan_network()\n    for device in devices:\n        tree_view.insert("", "end", values=(device["ip"], device["mac"], device["vendor"]))\n\nroot = tk.Tk()\nroot.title("Network Scanner")\n\nframe = ttk.Frame(root, padding="10")\nframe.grid(row=0, column=0, sticky=tk.W)\n\ntree_view = ttk.Treeview(frame, columns=("IP", "MAC", "Vendor"), show="headings")\ntree_view.heading("IP", text="IP")\ntree_view.heading("MAC", text="MAC")\ntree_view.heading("Vendor", text="Vendor")\ntree_view.grid(row=0, column=0, sticky=tk.W)\n\nscan_button = ttk.Button(frame, text="Scan Network", command=update_tree_view)\nscan_button.grid(row=1, column=0, pady="10")\n\nroot.mainloop()|fn|network_scanner.py\n```']
x_n = "\n".join(x)
print(x_n)